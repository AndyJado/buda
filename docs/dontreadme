## 发明名称

存在结构不确定组件的三维网格装配体的装配方法.

### 摘要

本发明涉及一种针对存在结构不确定性的复杂装配体的装配算法. 该方法包含以下特征: 1) 按本发明的方法绘制深度图概念, 末端节点能够表达零件的深度与所有权. 2) 按深度图为在单独零件(结构可以不存在)文件中定义所有权坐标系与相应深度. 3) 同一装配深度下, 一组'主-中(可缺省)-从'至多三个零件将缩减为下一个装配深度新的零件, 沿深度递归至仅存一个零件时完成装配, 而该零件又可作为一个单独零件用于另一深度图. 3) 装配行为通过仿射变换遍历一次装配关系图完成.

本发明将传统手工进行的装配关系,装配过程,装配行为表达为数据结构与函数运算, 能够描述存在不确定性的复杂装配结构体, 是未知结构的仿真分析模型构建基础不可绕过的一环.

### 技术背景

> 计算机辅助工程(CAE)已经被用于在许多任务中支持工程师。例如，在产品的设计程序中, CAE分析, 尤其是有限元分析(FEA) ，已经经常被用于获得和评估各种负载条件(例如静态或者动态)下的模拟结构响应(例如，应力、位移等).

上述引用自lsdyna软件专利中常用的背景描述, 该描述实际指出了现有有限元分析软件在工程应用中的局限性,即: 

相同结构在不同负载下的响应是容易的, 不同结构在相同负载下的响应是困难的. 尽管这一需求却是显然且普遍存在.

例如轮船, 动车, 公路护栏等新产品设计, 国家出台的相关标准明确规定了新产品需满足的负载条件, 护栏需要实现车辆高速冲击下标准规定的对车导向功能, 动车需要车头在高速冲击下起到标准规定的缓冲作用. 有限元分析在设计过程中占绝对主导地位, 动车设计的标准中甚至直接要求有限元计算结果替代一部分物理实验作为最终评判依据. 

然而, 在现有技术框架下, 每次结构更改均须工程师重复相同且复杂的负载设置. 一些模板代码,或者过程宏,能够加快这一过程, 这通常要求一个有限参数的未知结构, 这就限制了结构设计的可能性与模板代码的经济性.

负载确定, 结构不确定的CAE分析难点之一在于, 计算模型的构建过程中的边界,约束,接触,对称性等设置均依赖单元节点的最终空间坐标. 而节点的空间坐标又是零件结构形式与装配行为(将零件与依赖该零件的从属零件移动到最终位置)共同决定, 一个结构不确定的零件必然存在一个不确定的装配行为, 因此, 无法直接得到结构不确定性与最终节点坐标的函数关系.

现有的装配技术, 需要有确定的模型在同一工作区, 通过移动, 旋转, 面对齐, 轴对齐等操作实现, 而结构不确定性意味着装配仅概念存在的模型以及可能依赖该概念模型的其他概念或具体模型.

因此, 期望有一种装配方法, 能够装配尚不存在的模型.

### 说明    

- 情境: 在计算机系统中接收有限元分析(FEA)网格的模型集合, 模型集在全局坐标系下观测, 存在任意数量的模型位置不匹配.

-  基本方法: 装配行为表达为程序对模型集中所有主从坐标系的关系推演. 通过仿射变换, 从坐标系所在模型将被移动到另一个模型文件中的主坐标系, 程序将穷举所有装配可能性, 工程师可修正约束以调整潜在求解域, 或在结果中筛选. 

- 坐标系定义: 作为模型的固有本地属性, 坐标系可由相应模型上三个节点顺序确定, 未定义主从坐标系的模型不会被程序索引. 

- 三元递归: 单个模型在同一索引深度下, 允许存在任意个数的主坐标系,仅允许存在一个从坐标系. 至多三个连接模型会在下一个深度被视为一个模型. 即, 进入下一深度时该模型若暴露出两个从坐标系, 则当前可能性不成立.

- 索引深度: 索引深度在程序中定义为一个双端队列(Deque). 索引深度图(Graph)与模型文件无关, 应能够纸上用点与双端线轻松绘出. 一对主从坐标系将在装配行为完成后停留在当前深度.

- 一个可能解: 沿索引深度递归, 直到剩余从坐标系个数为0, 该装配关系视为一个可能解. 此时, 主坐标系=1 && (中间从坐标系-中间主坐标系)<=1 && 从坐标系=1, 仿射变换具有唯一性.

- 可增加约束: 在定义主坐标系时可增加对从模型的约束, 包括但不限于模型id,类型,几何特征. 从而减小求解域.

- 可释放约束: 例如, 高曲率的稀疏面网格的局部坐标系难以准确选取, 在坐标系定义时增加误差限,从而增加潜在求解域.

- 解集的概率分布: 初筛可通过索引深度图对比, 此时不涉及任何模型移动操作, 关系推导不会造成计算瓶颈. 二筛可通过box体积干涉检测, 每个模型体积将变成由8个点描述, 按索引深度递归式计算相邻体积干涉.

- AI模型引入: 此装配方法有且仅有三个用户交互界面, 均能够直接接入AI模型的训练或推理过程.

### 主权利要求?

本发明涉及一种针对存在结构不确定性的复杂装配体的装配方法, 其特征在于:  

任意复杂度装配体的装配均拆解为各个单独零件的所有权坐标系;

所有权即单个零件在同一深度存在至多一个从坐标系, 至少零个主坐标系

按零件所有权结构将任意零件在任意深度分成'主-中-从'三类

按三元递归装配深度概念图拆解装配目标, 单个零件的所有权坐标系应与概念深度图中位置一致, 则装配目标与已有零件存在的函数关系

借助仿射变换一次遍历一次三元递归结构即完成装配行为.


### 具体实施

本节将给出三个具体操作实例

#### 概念创新说明

本例以杯子(具体)-盖子(不存在)装配为例,用于说明本发明的出发点, 即将装配理解为零件的固有属性, 而不是传统空间位置改变. 

步骤一: [用户]打开杯子的模型文件, 表达'我这要有个盖子'的方法如下: 在杯口定义一个坐标系, 并赋予该坐标系'主'属性, 结束.

程序代码:

```python
    cup_asb = dir_a_asb('asset/cup/') # cup文件夹下所有零件将参与本次装配
    cup_asb.try_final()  # 尝试自动推导装配关系输出最终装配体
```

程序输出:

```
Assembly depth 0 has: 1 x 1 possibles 
**----1 possible remians, finaling ASSEMBLY----**
At depth 0, assembling coordinate piar [(1, None)]
SUCCESS, ASSEMBLE FINISHED 
```

输出解释:

第一行: 装配深度只有一层,即第0层, 装配可能性只有一种, 完成装配关系推导.

第二行: 既然装配可能性只存在一种, 那么程序输出该装配体.

第三行: 在装配深度0, 仿射变换将从坐标系所在移动到主坐标系所在, 因为未提供杯子,所以是None, 杯子的主坐标系编号是1, 所以是(1,None)

第四行: 装配完成.

#### 

以'立柱-挡块-护栏板'为例, 



#### 四深度货车装配

见 susp.pptx

有gif 播放幻灯片可见.






